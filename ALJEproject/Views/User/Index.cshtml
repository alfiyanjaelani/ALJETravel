@{
    ViewData["Title"] = "Users Page";
}
@model ALJEproject.Models.PaginatedUserViewModel
   
    <div class="container">
        <h2>User List</h2>
        <!-- Button to Create User -->
        <div class="mb-3">
            <button class="btn btn-primary btn-create-user" data-url="@Url.Action("Create", "User")">
                <i class="fas fa-user-plus"></i> Create New User
            </button>
        </div>
        <!-- Search Input -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <!-- Export to Excel Button on the Left -->
            <div>
                <form method="post" action="@Url.Action("ExportToExcel", "User")">
                    <button type="submit" class="btn btn-success"><i class="fas fa-file-excel"></i> Export to Excel</button>
                </form>
            </div>

            <!-- Search Form on the Right -->
            <form method="get" action="@Url.Action("Index", "User")" class="ms-auto">
                <div class="input-group">
                    <input type="text" name="search" class="form-control" placeholder="Search users..." value="@ViewData["CurrentSearch"]" />
                    <button type="submit" class="btn btn-primary"><i class="fas fa-search"></i> Search</button>
                </div>
            </form>
        </div>


        <table id="userTable" class="table">
            <thead>
                <tr>
                    <th>UserId</th>
                    <th>User Name</th>
                    <th>CompanyName</th>
                    <th>Role</th>
                    <th>Created date</th>
                    <th>Created by</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users) // Assuming 'Model.Users' is the list of users
                {
                    <tr id="userRow-@user.UserId">
                        <td>@user.UserId</td>
                        <td>@user.UserName</td>
                        <td>@user.CompanyName</td>
                        <td>@user.RoleName</td>
                        <td>@user.CreatedDate</td>
                        <td>@user.CreatedBy</td>
                        <td>
                            <button class="btn btn-primary btn-view-user" data-id="@user.UserId">
                                <i class="fas fa-eye"></i> View
                            </button>
                            <button class="btn btn-warning btn-edit-user" data-id="@user.UserId">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button class="btn btn-danger btn-delete-user" data-id="@user.UserId">
                                <i class="fas fa-trash-alt"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination Controls -->
        <div id="paginationControls" class="d-flex justify-content-between align-items-center">
            <div>
                Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) of @Model.TotalCount entries
            </div>
            <nav>
                <ul class="pagination mb-0">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })">Prev</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled"><a class="page-link">Prev</a></li>
                    }

                    @for (int i = 1; i <= Math.Ceiling((double)Model.TotalCount / Model.PageSize); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
                        </li>
                    }

                    @if (Model.CurrentPage < Math.Ceiling((double)Model.TotalCount / Model.PageSize))
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled"><a class="page-link">Next</a></li>
                    }
                </ul>
            </nav>
        </div>

    </div>

    <!-- Container for Create User Modal -->
    <div id="createUserModalContainer"></div>

    <!-- Container for Edit User Modal -->
    <div id="editUserModalContainer"></div>

    <!-- Container for View User Modal -->
    <div id="viewUserModalContainer"></div>

    <!-- Notification Modal -->
    <div class="modal fade" id="notificationModal" tabindex="-1" role="dialog" aria-labelledby="notificationModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="notificationModalLabel">Notification</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="notificationMessage">
                    <!-- Notification message will be injected here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="refreshPage()">Close</button>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
        $(document).ready(function () {
            // Create User
            $(document).on("click", ".btn-create-user", function () {
                var url = $(this).data("url");
                $.get(url, function (data) {
                    $("#createUserModalContainer").html(data);
                    $("#createUserModal").modal("show");
                });
            });

            $(document).on('submit', '#createUserForm', function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function (response) {
                        handleResponse(response, "#createUserModal");
                    },
                    error: function () {
                        showError("An error occurred while creating the user.");
                    }
                });
            });

            // Edit User
            $(document).on("click", ".btn-edit-user", function () {
                var userId = $(this).data("id");
                $.get('@Url.Action("Edit", "User")', { id: userId }, function (data) {
                    $("#editUserModalContainer").html(data);
                    $("#editUserModal").modal("show");
                });
            });

            $(document).on('submit', '#editUserForm', function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function (response) {
                        handleResponse(response, "#editUserModal");
                    },
                    error: function () {
                        showError("An error occurred while updating the user.");
                    }
                });
            });

            // Delete User
            $(document).on("click", ".btn-delete-user", function () {
                var userId = $(this).data("id");
                var confirmDelete = confirm("Are you sure you want to delete this user?");
                if (confirmDelete) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Delete", "User")',
                        data: { id: userId },
                        success: function (response) {
                            if (response.success) {
                                $('#notificationMessage').text("User deleted successfully!");
                                $('#notificationModal').modal('show');
                                $('#userRow-' + userId).remove(); // Remove user row from table
                            } else {
                                showError("Failed to delete user: " + response.errors.join(", "));
                            }
                        },
                        error: function () {
                            showError("An error occurred while deleting the user.");
                        }
                    });
                }
            });

            //view
            // View User
            $(document).on("click", ".btn-view-user", function () {
                var userId = $(this).data("id");
                $.get('@Url.Action("View", "User")', { id: userId }, function (data) {
                    $("#viewUserModalContainer").html(data);
                    $("#viewUserModal").modal("show");
                });
            });

        });

        function handleResponse(response, modalId) {
            if (response.success) {
                $('#notificationMessage').text("User saved successfully!");
                $('#notificationModal').modal('show');
                $(modalId).modal('hide'); // Hide the modal
                /*refreshPage();*/
            } else if (response.errors) {
                let errorMessages = response.errors.map(error => `<p>${error}</p>`).join("");
                $('#notificationMessage').html(errorMessages);
                $('#notificationModal').modal('show');
            } else {
                showError("Unexpected error occurred. Please try again.");
            }
        }

        function showError(message) {
            $('#notificationMessage').text(message);
            $('#notificationModal').modal('show');
        }

        function refreshPage() {
            location.reload();
        }
        </script>
    }
