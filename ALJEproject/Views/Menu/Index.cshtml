@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Menu Management";
    var username = Context.Session.GetString("Username"); // Ambil username dari session
}
@model ALJEproject.Models.PaginatedMenuViewModel

<h2>Menu List</h2>

<!-- Create Button above the table -->
<div class="mb-3">
    <button class="btn btn-primary btn-create-menu" data-url="@Url.Action("Create", "Menu")">
        <i class="fas fa-plus-circle"></i> Create New Menu
    </button>
</div>
<!-- Search and Export Section -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <form method="post" action="@Url.Action("ExportToExcel", "Menu")">
            <button type="submit" class="btn btn-success"><i class="fas fa-file-excel"></i> Export to Excel</button>
        </form>
    </div>

    <form method="get" action="@Url.Action("Index", "Menu")" class="ms-auto">
        <div class="input-group">
            <input type="text" name="search" class="form-control" placeholder="Search options..." value="@ViewData["CurrentSearch"]" />
            <button type="submit" class="btn btn-primary"><i class="fas fa-search"></i> Search</button>
        </div>
    </form>
</div>
<table id="MenuTable" class="table">
    <thead>
        <tr>
            <th>MenuID</th>
            <th>Menu Name</th>
            <th>ParentMenu</th>
            <th>Menu URL</th>
            <th>Menu Description</th>
            <th>Menu Order</th>
            <th>Active</th>
            <th>Actions</th> <!-- Actions column -->
        </tr>
    </thead>
    <tbody>
        @foreach (var menu in Model.Menus) // Assuming 'Model.Menu' is the list of menu
        {
            <tr id="menuRow-@menu.MenuID">
                <td>@menu.MenuID</td>
                <td>@menu.MenuName</td>
                <td>@menu.ParentMenuID</td>
                <td>@menu.MenuURL</td>
                <td>@menu.MenuDesc</td>
                <td>@menu.MenuOrder</td>
                <td>@(menu.Active ? "Yes" : "No")</td>
                <td>
                    <!-- View Button with confirmation -->
                    <button class="btn btn-primary btn-view-menu" data-id="@menu.MenuID">
                        <i class="fas fa-eye"></i> View
                    </button>
                    <!-- Edit Button -->
                    <button class="btn btn-warning btn-edit-menu" data-id="@menu.MenuID">
                        <i class="fas fa-edit"></i> Edit
                    </button>

                    <!-- Delete Button with confirmation -->
                    <button class="btn btn-danger btn-delete-menu" data-id="@menu.MenuID">
                        <i class="fas fa-trash-alt"></i> Delete
                    </button>

                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div id="paginationControls" class="d-flex justify-content-between align-items-center">
    <div>
        Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) of @Model.TotalCount entries
    </div>
    <nav>
        <ul class="pagination mb-0">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })">Prev</a>
                </li>
            }
            else
            {
                <li class="page-item disabled"><a class="page-link">Prev</a></li>
            }

            @for (int i = 1; i <= Math.Ceiling((double)Model.TotalCount / Model.PageSize); i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Math.Ceiling((double)Model.TotalCount / Model.PageSize))
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled"><a class="page-link">Next</a></li>
            }
        </ul>
    </nav>
</div>


<!-- Create Menu Modal Container -->
<div id="createMenuModalContainer"></div>

<!-- Edit Menu Modal Container -->
<div id="editMenuModalContainer"></div>

<!-- Container for View Menu Modal -->
<div id="viewMenuModalContainer"></div>


<!-- Notification Modal for Success/Error Messages -->
<div class="modal fade" id="notificationModal" tabindex="-1" role="dialog" aria-labelledby="notificationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="notificationModalLabel">Notification</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="notificationMessage">
                <!-- Message will be injected here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="refreshPage()">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Create Menu
            $(document).on("click", ".btn-create-menu", function () {
                var url = $(this).data("url");
                $.get(url, function (data) {
                    $("#createMenuModalContainer").html(data);
                    $("#createMenuModal").modal("show");
                });
            });

            $(document).on('submit', '#createMenuForm', function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            $('#notificationMessage').text("Menu created successfully!");
                            $('#notificationModal').modal('show');
                            $('#createMenuModal').modal('hide');
                        } else {
                            $('#notificationMessage').html(response.errors.join("<br>"));
                            $('#notificationModal').modal('show');
                        }
                    },
                    error: function () {
                        $('#notificationMessage').text("An error occurred while creating the menu.");
                        $('#notificationModal').modal('show');
                    }
                });
            });

            // Edit Menu
            $(document).on("click", ".btn-edit-menu", function () {
                var menuId = $(this).data("id");
                $.get('@Url.Action("Edit", "Menu")', { id: menuId }, function (data) {
                    $("#editMenuModalContainer").html(data);
                    $("#editMenuModal").modal("show");
                });
            });

            $(document).on('submit', '#editMenuForm', function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            $('#notificationMessage').text("Menu updated successfully!");
                            $('#notificationModal').modal('show');
                            $('#editMenuModal').modal('hide');
                        } else {
                            $('#notificationMessage').html(response.errors.join("<br>"));
                            $('#notificationModal').modal('show');
                        }
                    },
                    error: function () {
                        $('#notificationMessage').text("An error occurred while updating the menu.");
                        $('#notificationModal').modal('show');
                    }
                });
            });

            // Delete Menu
            $(document).on("click", ".btn-delete-menu", function () {
                var menuId = $(this).data("id");
                var confirmDelete = confirm("Are you sure you want to delete this menu?");
                if (confirmDelete) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Delete", "Menu")',
                        data: { id: menuId },
                        success: function (response) {
                            if (response.success) {
                                $('#notificationMessage').text("Menu deleted successfully!");
                                $('#notificationModal').modal('show');
                                $('#menuRow-' + menuId).remove();
                            } else {
                                $('#notificationMessage').text("Failed to delete menu: " + response.errors.join(", "));
                                $('#notificationModal').modal('show');
                            }
                        },
                        error: function () {
                            $('#notificationMessage').text("An error occurred while deleting the menu.");
                            $('#notificationModal').modal('show');
                        }
                    });
                }
            });

             // View Option
            $(document).on("click", ".btn-view-menu", function () {
                var optionId = $(this).data("id");
                $.get('@Url.Action("View", "Menu")', { id: optionId }, function (data) {
                    $("#viewMenuModalContainer").html(data);
                    $("#viewMenuModal").modal("show");
                });
            });
        });

        function refreshPage() {
            location.reload();
        }
    </script>
}
